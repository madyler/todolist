{"ast":null,"code":"var _jsxFileName = \"/home/alex/IT-INCUBATOR/todolist/src/EditableSpan.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function EditableSpan(props) {\n  _s();\n\n  let [editMode, setEditMode] = useState(false);\n  let [title, setTitle] = useState(props.value);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n    setTitle(props.value);\n  };\n\n  const activateViewMode = () => {\n    setEditMode(false);\n    props.onChange(title);\n  };\n\n  const changeTitle = e => {\n    setTitle(e.currentTarget.value);\n  };\n\n  return editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n    value: title,\n    onChange: changeTitle,\n    autoFocus: true,\n    onBlur: activateViewMode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 11\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    onDoubleClick: activateEditMode,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 11\n  }, this);\n}\n\n_s(EditableSpan, \"QeJF1daIrCh753fIFS8q1vMlE0A=\");\n\n_c = EditableSpan;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableSpan\");","map":{"version":3,"sources":["/home/alex/IT-INCUBATOR/todolist/src/EditableSpan.tsx"],"names":["React","useState","EditableSpan","props","editMode","setEditMode","title","setTitle","value","activateEditMode","activateViewMode","onChange","changeTitle","e","currentTarget"],"mappings":";;;AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA2C,OAA3C;;AAOA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAAoD;AAAA;;AACvD,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAI,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACE,KAAK,CAACK,KAAP,CAAhC;;AAEA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,QAAQ,CAACJ,KAAK,CAACK,KAAP,CAAR;AACH,GAHD;;AAIA,QAAME,gBAAgB,GAAG,MAAM;AAC3BL,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,KAAK,CAACQ,QAAN,CAAeL,KAAf;AACH,GAHD;;AAIA,QAAMM,WAAW,GAAIC,CAAD,IAAsC;AACtDN,IAAAA,QAAQ,CAACM,CAAC,CAACC,aAAF,CAAgBN,KAAjB,CAAR;AACH,GAFD;;AAIA,SAAOJ,QAAQ,gBACT;AAAO,IAAA,KAAK,EAAEE,KAAd;AAAqB,IAAA,QAAQ,EAAEM,WAA/B;AAA4C,IAAA,SAAS,MAArD;AAAsD,IAAA,MAAM,EAAEF;AAA9D;AAAA;AAAA;AAAA;AAAA,UADS,gBAET;AAAM,IAAA,aAAa,EAAED,gBAArB;AAAA,cAAwCN,KAAK,CAACK;AAA9C;AAAA;AAAA;AAAA;AAAA,UAFN;AAGH;;GAnBeN,Y;;KAAAA,Y","sourcesContent":["import React, {ChangeEvent, useState} from 'react';\r\n\r\ntype EditableSpanPropsType = {\r\n    value: string\r\n    onChange: (newValue: string) => void\r\n}\r\n\r\nexport function EditableSpan(props: EditableSpanPropsType) {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [title, setTitle] = useState(props.value);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n        setTitle(props.value);\r\n    }\r\n    const activateViewMode = () => {\r\n        setEditMode(false);\r\n        props.onChange(title);\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    return editMode\r\n        ? <input value={title} onChange={changeTitle} autoFocus onBlur={activateViewMode}/>\r\n        : <span onDoubleClick={activateEditMode}>{props.value}</span>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}