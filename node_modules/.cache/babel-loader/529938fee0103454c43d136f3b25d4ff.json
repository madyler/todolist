{"ast":null,"code":"var _jsxFileName = \"/home/alex/IT-INCUBATOR/todolist/src/Todolist.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AddItemForm } from './AddItemForm';\nimport { EditableSpan } from './EditableSpan';\nimport { IconButton } from \"@material-ui/core\";\nimport { Delete } from \"@mui/icons-material\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Todolist(props) {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const addTask = title => {\n    props.addTask(title, props.id);\n  };\n\n  const removeTodolist = () => {\n    props.removeTodolist(props.id);\n  };\n\n  const changeTodolistTitle = title => {\n    props.changeTodolistTitle(props.id, title);\n  };\n\n  const onAllClickHandler = () => props.changeFilter(\"all\", props.id);\n\n  const onActiveClickHandler = () => props.changeFilter(\"active\", props.id);\n\n  const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.id);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(EditableSpan, {\n        value: props.title,\n        onChange: changeTodolistTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"delete\",\n        onClick: removeTodolist,\n        children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddItemForm, {\n      addItem: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: props.filter === 'all' ? \"outlined\" : \"contained\",\n          color: \"success\",\n          onClick: onAllClickHandler,\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: props.filter === 'active' ? \"outlined\" : \"contained\",\n          color: \"success\",\n          onClick: onActiveClickHandler,\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: props.filter === 'completed' ? \"outlined\" : \"contained\",\n          color: \"success\",\n          onClick: onCompletedClickHandler,\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tasks.map(t => {\n        const onClickHandler = () => props.removeTask(t.id, props.id);\n\n        const onChangeHandler = e => {\n          let newIsDoneValue = e.currentTarget.checked;\n          props.changeTaskStatus(t.id, newIsDoneValue, props.id);\n        };\n\n        const onTitleChangeHandler = newValue => {\n          props.changeTaskTitle(t.id, newValue, props.id);\n        };\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: t.isDone ? \"is-done\" : \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: onChangeHandler,\n            checked: t.isDone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(EditableSpan, {\n            value: t.title,\n            onChange: onTitleChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"delete\",\n            onClick: onClickHandler,\n            children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, t.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Todolist, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Todolist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"sources":["/home/alex/IT-INCUBATOR/todolist/src/Todolist.tsx"],"names":["React","AddItemForm","EditableSpan","IconButton","Delete","Button","ButtonGroup","useDispatch","Todolist","props","dispatch","addTask","title","id","removeTodolist","changeTodolistTitle","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","filter","tasks","map","t","onClickHandler","removeTask","onChangeHandler","e","newIsDoneValue","currentTarget","checked","changeTaskStatus","onTitleChangeHandler","newValue","changeTaskTitle","isDone"],"mappings":"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","sourcesContent":["import React, {ChangeEvent} from 'react';\r\nimport {FilterValuesType} from './App';\r\nimport {AddItemForm} from './AddItemForm';\r\nimport {EditableSpan} from './EditableSpan';\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {Delete} from \"@mui/icons-material\";\r\nimport {Button, ButtonGroup} from \"@mui/material\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n}\r\n\r\nexport function Todolist(props: PropsType) {\r\n    const dispatch = useDispatch()\r\n    const addTask = (title: string) => {\r\n        props.addTask(title, props.id);\r\n    }\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id);\r\n    }\r\n    const changeTodolistTitle = (title: string) => {\r\n        props.changeTodolistTitle(props.id, title);\r\n    }\r\n\r\n    const onAllClickHandler = () => props.changeFilter(\"all\", props.id);\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\", props.id);\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.id);\r\n\r\n    return <div>\r\n        <h3> <EditableSpan value={props.title} onChange={changeTodolistTitle} />\r\n            {/*<button onClick={removeTodolist}>x</button>*/}\r\n\r\n            <IconButton aria-label=\"delete\" onClick={removeTodolist}>\r\n                <Delete/>\r\n            </IconButton>\r\n\r\n        </h3>\r\n        <AddItemForm addItem={addTask}/>\r\n        <div>\r\n            <ButtonGroup>\r\n                <Button variant={props.filter === 'all' ? \"outlined\" :\"contained\"} color=\"success\"  onClick={onAllClickHandler}>All</Button>\r\n                <Button variant={props.filter === 'active' ? \"outlined\" :\"contained\"}  color=\"success\" onClick={onActiveClickHandler}>Active</Button>\r\n                <Button variant={props.filter === 'completed' ? \"outlined\" :\"contained\"}  color=\"success\"  onClick={onCompletedClickHandler}>Completed</Button>\r\n            </ButtonGroup>\r\n\r\n        </div>\r\n        <ul>\r\n            {\r\n                props.tasks.map(t => {\r\n                    const onClickHandler = () => props.removeTask(t.id, props.id)\r\n                    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                        let newIsDoneValue = e.currentTarget.checked;\r\n                        props.changeTaskStatus(t.id, newIsDoneValue, props.id);\r\n                    }\r\n                    const onTitleChangeHandler = (newValue: string) => {\r\n                        props.changeTaskTitle(t.id, newValue, props.id);\r\n                    }\r\n\r\n\r\n                    return <li key={t.id} className={t.isDone ? \"is-done\" : \"\"}>\r\n                        <input type=\"checkbox\" onChange={onChangeHandler} checked={t.isDone}/>\r\n                        <EditableSpan value={t.title} onChange={onTitleChangeHandler} />\r\n                        {/*<button onClick={onClickHandler}>x</button>*/}\r\n                        <IconButton aria-label=\"delete\" onClick={onClickHandler}>\r\n                            <Delete/>\r\n                        </IconButton>\r\n                    </li>\r\n                })\r\n            }\r\n        </ul>\r\n    </div>\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}