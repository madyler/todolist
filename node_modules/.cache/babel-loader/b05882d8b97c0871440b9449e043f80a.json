{"ast":null,"code":"import { v1 } from \"uuid\";\nexport const todolistsReducer = (todolists, action) => {\n  switch (action.type) {\n    case 'REMOVE-TODOLIST':\n      return todolists.filter(tl => tl.id !== action.id);\n\n    case \"ADD-TODOLIST\":\n      alert('ggg');\n      return [...todolists, {\n        id: action.todolistId,\n        title: action.title,\n        filter: 'all'\n      }];\n\n    case \"CHANGE-TODOLIST-FILTER\":\n      let todolist = todolists.find(tl => tl.id === action.id);\n\n      if (todolist) {\n        todolist.filter = action.filter;\n      }\n\n      ;\n      return [...todolists];\n\n    case \"CHANGE-TODOLIST-TITLE\":\n      let todolist1 = todolists.find(tl => tl.id === action.id);\n\n      if (todolist1) {\n        // если нашёлся - изменим ему заголовок\n        todolist1.title = action.title;\n      }\n\n      return [...todolists];\n\n    default:\n      throw new Error('incorrect todolists reducer action type');\n  }\n};\nexport const removeTodolistAC = id => {\n  return {\n    type: \"REMOVE-TODOLIST\",\n    id\n  };\n};\nexport const addTodolistAC = title => {\n  return {\n    type: \"ADD-TODOLIST\",\n    title,\n    todolistId: v1()\n  };\n};\nexport const changeTodolistTitleAC = (id, title) => {\n  return {\n    type: \"CHANGE-TODOLIST-TITLE\",\n    id,\n    title\n  };\n};\nexport const changeTodolistFilterAC = (id, filter) => {\n  return {\n    type: \"CHANGE-TODOLIST-FILTER\",\n    id,\n    filter\n  };\n};","map":{"version":3,"sources":["/home/alex/IT-INCUBATOR/todolist/src/store/todolists-reducer.ts"],"names":["v1","todolistsReducer","todolists","action","type","filter","tl","id","alert","todolistId","title","todolist","find","todolist1","Error","removeTodolistAC","addTodolistAC","changeTodolistTitleAC","changeTodolistFilterAC"],"mappings":"AACA,SAAQA,EAAR,QAAiB,MAAjB;AAuBA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,SAAD,EAAiCC,MAAjC,KAA6E;AACzG,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,iBAAL;AACI,aAAOF,SAAS,CAACG,MAAV,CAAiBC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUJ,MAAM,CAACI,EAAxC,CAAP;;AACJ,SAAK,cAAL;AACIC,MAAAA,KAAK,CAAC,KAAD,CAAL;AACA,aAAO,CAAC,GAAGN,SAAJ,EAAe;AAACK,QAAAA,EAAE,EAAEJ,MAAM,CAACM,UAAZ;AAAwBC,QAAAA,KAAK,EAAEP,MAAM,CAACO,KAAtC;AAA6CL,QAAAA,MAAM,EAAE;AAArD,OAAf,CAAP;;AACJ,SAAK,wBAAL;AACI,UAAIM,QAAQ,GAAGT,SAAS,CAACU,IAAV,CAAeN,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUJ,MAAM,CAACI,EAAtC,CAAf;;AACA,UAAII,QAAJ,EAAc;AACVA,QAAAA,QAAQ,CAACN,MAAT,GAAkBF,MAAM,CAACE,MAAzB;AACH;;AAAA;AACD,aAAO,CAAC,GAAGH,SAAJ,CAAP;;AACJ,SAAK,uBAAL;AACI,UAAIW,SAAS,GAAGX,SAAS,CAACU,IAAV,CAAeN,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUJ,MAAM,CAACI,EAAtC,CAAhB;;AACA,UAAIM,SAAJ,EAAe;AACX;AACAA,QAAAA,SAAS,CAACH,KAAV,GAAkBP,MAAM,CAACO,KAAzB;AACH;;AACG,aAAO,CAAC,GAAGR,SAAJ,CAAP;;AACR;AACI,YAAM,IAAIY,KAAJ,CAAU,yCAAV,CAAN;AApBR;AAsBH,CAvBM;AAyBP,OAAO,MAAMC,gBAAgB,GAAIR,EAAD,IAAiC;AAC7D,SAAO;AAACH,IAAAA,IAAI,EAAE,iBAAP;AAA0BG,IAAAA;AAA1B,GAAP;AACH,CAFM;AAGP,OAAO,MAAMS,aAAa,GAAIN,KAAD,IAAiC;AAC1D,SAAO;AAACN,IAAAA,IAAI,EAAE,cAAP;AAAuBM,IAAAA,KAAvB;AAA8BD,IAAAA,UAAU,EAAET,EAAE;AAA5C,GAAP;AACH,CAFM;AAGP,OAAO,MAAMiB,qBAAqB,GAAG,CAACV,EAAD,EAAaG,KAAb,KAAqD;AACtF,SAAO;AAACN,IAAAA,IAAI,EAAE,uBAAP;AAAgCG,IAAAA,EAAhC;AAAoCG,IAAAA;AAApC,GAAP;AACH,CAFM;AAGP,OAAO,MAAMQ,sBAAsB,GAAG,CAACX,EAAD,EAAaF,MAAb,KAAiE;AACnG,SAAO;AAACD,IAAAA,IAAI,EAAE,wBAAP;AAAiCG,IAAAA,EAAjC;AAAqCF,IAAAA;AAArC,GAAP;AACH,CAFM","sourcesContent":["import {FilterValuesType, TodolistType} from \"../App\";\nimport {v1} from \"uuid\";\n\nexport type RemoveTodoListAT = {\n    type: 'REMOVE-TODOLIST'\n    id: string\n}\nexport type AddTodoListAT = {\n    type: 'ADD-TODOLIST'\n    title: string\n    todolistId:string\n}\ntype ChangeTodoListFilterAT = {\n    type: 'CHANGE-TODOLIST-FILTER'\n    id: string\n    filter: FilterValuesType,\n}\ntype ChangeTodoListTitleAT = {\n    type: 'CHANGE-TODOLIST-TITLE'\n    id: string\n    title: string,\n}\nexport type ActionType = RemoveTodoListAT | AddTodoListAT | ChangeTodoListFilterAT | ChangeTodoListTitleAT\n\nexport const todolistsReducer = (todolists: Array<TodolistType>, action: ActionType): Array<TodolistType> => {\n    switch (action.type) {\n        case 'REMOVE-TODOLIST':\n            return todolists.filter(tl => tl.id !== action.id)\n        case \"ADD-TODOLIST\":\n            alert('ggg')\n            return [...todolists, {id: action.todolistId, title: action.title, filter: 'all'}];\n        case \"CHANGE-TODOLIST-FILTER\":\n            let todolist = todolists.find(tl => tl.id === action.id);\n            if (todolist) {\n                todolist.filter = action.filter;\n            };\n            return [...todolists]\n        case \"CHANGE-TODOLIST-TITLE\":\n            let todolist1 = todolists.find(tl => tl.id === action.id);\n            if (todolist1) {\n                // если нашёлся - изменим ему заголовок\n                todolist1.title = action.title;\n            }\n                return [...todolists]\n        default:\n            throw new Error('incorrect todolists reducer action type')\n    }\n}\n\nexport const removeTodolistAC = (id: string):RemoveTodoListAT => {\n    return {type: \"REMOVE-TODOLIST\", id}\n}\nexport const addTodolistAC = (title: string):AddTodoListAT => {\n    return {type: \"ADD-TODOLIST\", title, todolistId: v1()}\n}\nexport const changeTodolistTitleAC = (id: string, title: string):ChangeTodoListTitleAT => {\n    return {type: \"CHANGE-TODOLIST-TITLE\", id, title}\n}\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType):ChangeTodoListFilterAT => {\n    return {type: \"CHANGE-TODOLIST-FILTER\", id, filter}\n}"]},"metadata":{},"sourceType":"module"}