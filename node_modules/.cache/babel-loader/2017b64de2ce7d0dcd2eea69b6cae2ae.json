{"ast":null,"code":"var _jsxFileName = \"/home/alex/IT-INCUBATOR/todolist/src/AppWithReducers.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\nimport { AddItemForm } from './AddItemForm';\nimport ButtonAppBar from \"./ButtonAppBar\";\nimport { Container, Grid, Paper } from \"@material-ui/core\";\nimport { addTodolistAC, changeTodolistFilterAC, changeTodolistTitleAC, removeTodolistAC, todolistsReducer } from \"./store/todolists-reducer\";\nimport { addTaskAC, changeTaskStatusAC, changeTaskTitleAC, removeTaskAC, tasksReducer } from \"./store/tasks-reducers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AppWithReducers() {\n  _s();\n\n  let todolistId1 = v1();\n  let todolistId2 = v1();\n  let [todolists, dispatchToTodolistsReducer] = useReducer(todolistsReducer, [{\n    id: todolistId1,\n    title: \"What to learn\",\n    filter: \"all\"\n  }, {\n    id: todolistId2,\n    title: \"What to buy\",\n    filter: \"all\"\n  }]);\n  let [tasks, dispatchToTasksReducer] = useReducer(tasksReducer, {\n    [todolistId1]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }],\n    [todolistId2]: [{\n      id: v1(),\n      title: \"Milk\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"React Book\",\n      isDone: true\n    }]\n  });\n\n  function removeTask(id, todolistId) {\n    const action = removeTaskAC(todolistId, id);\n    dispatchToTasksReducer(action);\n  }\n\n  function addTask(title, todolistId) {\n    const action = addTaskAC(todolistId, title);\n    dispatchToTasksReducer(action);\n  }\n\n  function changeStatus(id, isDone, todolistId) {\n    dispatchToTasksReducer(changeTaskStatusAC(todolistId, id, isDone));\n  }\n\n  function changeTaskTitle(id, newTitle, todolistId) {\n    dispatchToTasksReducer(changeTaskTitleAC(todolistId, id, newTitle));\n  }\n\n  function removeTodolist(id) {\n    dispatchToTodolistsReducer(removeTodolistAC(id));\n    dispatchToTasksReducer(removeTodolistAC(id));\n  }\n\n  function addTodolist(title) {\n    debugger;\n    dispatchToTodolistsReducer(addTodolistAC(title));\n    dispatchToTasksReducer(addTodolistAC(title));\n  }\n\n  function changeTodolistTitle(id, title) {\n    dispatchToTodolistsReducer(changeTodolistTitleAC(id, title));\n  }\n\n  function changeFilter(value, todolistId) {\n    dispatchToTodolistsReducer(changeTodolistFilterAC(todolistId, value));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ButtonAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fixed: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          padding: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(AddItemForm, {\n          addItem: addTodolist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: todolists.map(tl => {\n          let allTodolistTasks = tasks[tl.id];\n          let tasksForTodolist = allTodolistTasks;\n          if (tl.filter === \"active\") tasksForTodolist = allTodolistTasks.filter(t => t.isDone === false);\n          if (tl.filter === \"completed\") tasksForTodolist = allTodolistTasks.filter(t => t.isDone === true);\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              style: {\n                padding: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Todolist, {\n                id: tl.id,\n                title: tl.title,\n                tasks: tasksForTodolist,\n                removeTask: removeTask,\n                changeFilter: changeFilter,\n                addTask: addTask,\n                changeTaskStatus: changeStatus,\n                filter: tl.filter,\n                removeTodolist: removeTodolist,\n                changeTaskTitle: changeTaskTitle,\n                changeTodolistTitle: changeTodolistTitle\n              }, tl.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppWithReducers, \"TbWbrmvQDws7UAnB5iHUI1tENdY=\");\n\n_c = AppWithReducers;\nexport default AppWithReducers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppWithReducers\");","map":{"version":3,"sources":["/home/alex/IT-INCUBATOR/todolist/src/AppWithReducers.tsx"],"names":["React","useReducer","Todolist","v1","AddItemForm","ButtonAppBar","Container","Grid","Paper","addTodolistAC","changeTodolistFilterAC","changeTodolistTitleAC","removeTodolistAC","todolistsReducer","addTaskAC","changeTaskStatusAC","changeTaskTitleAC","removeTaskAC","tasksReducer","AppWithReducers","todolistId1","todolistId2","todolists","dispatchToTodolistsReducer","id","title","filter","tasks","dispatchToTasksReducer","isDone","removeTask","todolistId","action","addTask","changeStatus","changeTaskTitle","newTitle","removeTodolist","addTodolist","changeTodolistTitle","changeFilter","value","padding","map","tl","allTodolistTasks","tasksForTodolist","t"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\r\nimport './App.css';\r\nimport {TaskType, Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\nimport {AddItemForm} from './AddItemForm';\r\nimport ButtonAppBar from \"./ButtonAppBar\";\r\nimport {Container, Grid, Paper} from \"@material-ui/core\";\r\nimport {\r\n    addTodolistAC,\r\n    changeTodolistFilterAC,\r\n    changeTodolistTitleAC,\r\n    removeTodolistAC,\r\n    todolistsReducer\r\n} from \"./store/todolists-reducer\";\r\nimport {\r\n    addTaskAC,\r\n    changeTaskStatusAC,\r\n    changeTaskTitleAC,\r\n    removeTaskAC,\r\n    tasksReducer\r\n} from \"./store/tasks-reducers\";\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type TodolistType = {\r\n    id: string\r\n    title: string\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\n\r\n\r\nfunction AppWithReducers() {\r\n\r\n    let todolistId1 = v1();\r\n    let todolistId2 = v1();\r\n\r\n    let [todolists, dispatchToTodolistsReducer] = useReducer(todolistsReducer, [\r\n        {id: todolistId1, title: \"What to learn\", filter: \"all\"},\r\n        {id: todolistId2, title: \"What to buy\", filter: \"all\"}\r\n    ])\r\n\r\n    let [tasks, dispatchToTasksReducer] = useReducer(tasksReducer, {\r\n        [todolistId1]: [\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true}\r\n        ],\r\n        [todolistId2]: [\r\n            {id: v1(), title: \"Milk\", isDone: true},\r\n            {id: v1(), title: \"React Book\", isDone: true}\r\n        ]\r\n    });\r\n\r\n    function removeTask(id: string, todolistId: string) {\r\n        const action = removeTaskAC(todolistId, id)\r\n        dispatchToTasksReducer(action)\r\n    }\r\n    function addTask(title: string, todolistId: string) {\r\n        const action = addTaskAC(todolistId, title)\r\n        dispatchToTasksReducer(action)\r\n    }\r\n    function changeStatus(id: string, isDone: boolean, todolistId: string) {\r\n        dispatchToTasksReducer(changeTaskStatusAC(todolistId, id, isDone))\r\n    }\r\n    function changeTaskTitle(id: string, newTitle: string, todolistId: string) {\r\n        dispatchToTasksReducer(changeTaskTitleAC(todolistId, id, newTitle))\r\n    }\r\n\r\n    function removeTodolist(id: string) {\r\n        dispatchToTodolistsReducer(removeTodolistAC(id))\r\n        dispatchToTasksReducer(removeTodolistAC(id))\r\n    }\r\n    function addTodolist(title: string) {\r\n        debugger\r\n        dispatchToTodolistsReducer(addTodolistAC(title))\r\n        dispatchToTasksReducer(addTodolistAC(title))\r\n    }\r\n    function changeTodolistTitle(id: string, title: string) {\r\n        dispatchToTodolistsReducer(changeTodolistTitleAC(id, title))\r\n    }\r\n    function changeFilter(value: FilterValuesType, todolistId: string) {\r\n        dispatchToTodolistsReducer(changeTodolistFilterAC(todolistId, value))\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <ButtonAppBar/>\r\n            <Container fixed>\r\n                <Grid container style={{padding:'20px'}}>\r\n                    <AddItemForm addItem={addTodolist}/>\r\n                </Grid>\r\n\r\n                <Grid container spacing={3}>\r\n                    {todolists.map(tl => {\r\n                        let allTodolistTasks = tasks[tl.id];\r\n                        let tasksForTodolist = allTodolistTasks;\r\n\r\n                        if (tl.filter === \"active\")tasksForTodolist = allTodolistTasks.filter(t => t.isDone === false)\r\n                        if (tl.filter === \"completed\")tasksForTodolist = allTodolistTasks.filter(t => t.isDone === true)\r\n\r\n                        return <Grid item>\r\n                            <Paper style={{padding: '10px'}}>\r\n                                <Todolist\r\n                                    key={tl.id}\r\n                                    id={tl.id}\r\n                                    title={tl.title}\r\n                                    tasks={tasksForTodolist}\r\n                                    removeTask={removeTask}\r\n                                    changeFilter={changeFilter}\r\n                                    addTask={addTask}\r\n                                    changeTaskStatus={changeStatus}\r\n                                    filter={tl.filter}\r\n                                    removeTodolist={removeTodolist}\r\n                                    changeTaskTitle={changeTaskTitle}\r\n                                    changeTodolistTitle={changeTodolistTitle}\r\n                                />\r\n                            </Paper>\r\n                        </Grid>\r\n                    })}\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppWithReducers;\r\n"]},"metadata":{},"sourceType":"module"}