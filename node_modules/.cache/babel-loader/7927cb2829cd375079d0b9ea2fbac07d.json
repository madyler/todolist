{"ast":null,"code":"import { v1 } from \"uuid\";\nvar error = Simulate.error;\nexport const TasksReducers = (tasks, action) => {\n  switch (action.type) {\n    case \"REMOVE-TASK\":\n      let todolistTasks = tasks[action.todolistId];\n      tasks[action.todolistId] = todolistTasks.filter(t => t.id !== action.taskId);\n      return { ...tasks\n      };\n\n    case \"ADD-TASK\":\n      let todolistTasks1 = tasks[action.todolistId];\n      tasks[action.todolistId] = [{\n        id: v1(),\n        title: action.taskTitle,\n        isDone: false\n      }, ...todolistTasks1];\n      return { ...tasks\n      };\n\n    case \"CHANGE-STATUS\":\n      let task = tasks[action.todolistId].find(t => t.id === action.taskId);\n      if (task) task.isDone = action.isDone;\n      return { ...tasks\n      };\n\n    case \"CHANGE-TITLE\":\n      let todolistTasks3 = tasks[action.todolistId];\n      let task1 = todolistTasks3.find(t => t.id === action.taskId);\n      if (task1) task1.title = action.taskTitle;\n      return { ...tasks\n      };\n\n    default:\n      throw new Error('incorrect task reducer action type');\n  }\n};\n_c = TasksReducers;\nexport const RemoveTaskAC = (todolistId, taskId) => {\n  return {\n    type: 'REMOVE-TASK',\n    todolistId,\n    taskId\n  };\n};\n_c2 = RemoveTaskAC;\nexport const AddTaskAC = (todolistId, taskTitle) => {\n  return {\n    type: \"ADD-TASK\",\n    todolistId,\n    taskTitle\n  };\n};\n_c3 = AddTaskAC;\nexport const ChangeTaskStatusAC = (todolistId, taskId, isDone) => {\n  return {\n    type: \"CHANGE-STATUS\",\n    todolistId,\n    taskId,\n    isDone\n  };\n};\n_c4 = ChangeTaskStatusAC;\nexport const ChangeTaskTitleAC = (todolistId, taskId, taskTitle) => {\n  return {\n    type: \"CHANGE-TITLE\",\n    todolistId,\n    taskId,\n    taskTitle\n  };\n};\n_c5 = ChangeTaskTitleAC;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TasksReducers\");\n$RefreshReg$(_c2, \"RemoveTaskAC\");\n$RefreshReg$(_c3, \"AddTaskAC\");\n$RefreshReg$(_c4, \"ChangeTaskStatusAC\");\n$RefreshReg$(_c5, \"ChangeTaskTitleAC\");","map":{"version":3,"sources":["/home/alex/IT-INCUBATOR/todolist/src/store/tasks-reducers.ts"],"names":["v1","error","Simulate","TasksReducers","tasks","action","type","todolistTasks","todolistId","filter","t","id","taskId","todolistTasks1","title","taskTitle","isDone","task","find","todolistTasks3","task1","Error","RemoveTaskAC","AddTaskAC","ChangeTaskStatusAC","ChangeTaskTitleAC"],"mappings":"AACA,SAAQA,EAAR,QAAiB,MAAjB;IAGOC,K,GAAQC,Q,CAASD,K;AA2BxB,OAAO,MAAME,aAAa,GAAG,CAACC,KAAD,EAAwBC,MAAxB,KAA+D;AACxF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,UAAIC,aAAa,GAAGH,KAAK,CAACC,MAAM,CAACG,UAAR,CAAzB;AACAJ,MAAAA,KAAK,CAACC,MAAM,CAACG,UAAR,CAAL,GAA2BD,aAAa,CAACE,MAAd,CAAqBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACO,MAA1C,CAA3B;AACA,aAAO,EAAC,GAAGR;AAAJ,OAAP;;AACJ,SAAK,UAAL;AACI,UAAIS,cAAc,GAAGT,KAAK,CAACC,MAAM,CAACG,UAAR,CAA1B;AACAJ,MAAAA,KAAK,CAACC,MAAM,CAACG,UAAR,CAAL,GAA2B,CAAC;AAACG,QAAAA,EAAE,EAAEX,EAAE,EAAP;AAAWc,QAAAA,KAAK,EAAET,MAAM,CAACU,SAAzB;AAAoCC,QAAAA,MAAM,EAAE;AAA5C,OAAD,EAAqD,GAAGH,cAAxD,CAA3B;AACA,aAAO,EAAC,GAAGT;AAAJ,OAAP;;AACJ,SAAK,eAAL;AACI,UAAIa,IAAI,GAAGb,KAAK,CAACC,MAAM,CAACG,UAAR,CAAL,CAAyBU,IAAzB,CAA8BR,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACO,MAAnD,CAAX;AACA,UAAIK,IAAJ,EAAUA,IAAI,CAACD,MAAL,GAAcX,MAAM,CAACW,MAArB;AACV,aAAO,EAAC,GAAGZ;AAAJ,OAAP;;AACJ,SAAK,cAAL;AACI,UAAIe,cAAc,GAAGf,KAAK,CAACC,MAAM,CAACG,UAAR,CAA1B;AACA,UAAIY,KAAK,GAAGD,cAAc,CAACD,IAAf,CAAoBR,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACO,MAAzC,CAAZ;AACA,UAAIQ,KAAJ,EAAWA,KAAK,CAACN,KAAN,GAAcT,MAAM,CAACU,SAArB;AACX,aAAO,EAAC,GAAGX;AAAJ,OAAP;;AACJ;AACI,YAAM,IAAIiB,KAAJ,CAAU,oCAAV,CAAN;AAnBR;AAqBH,CAtBM;KAAMlB,a;AAwBb,OAAO,MAAMmB,YAAY,GAAG,CAACd,UAAD,EAAqBI,MAArB,KAAqD;AAC7E,SAAO;AAACN,IAAAA,IAAI,EAAE,aAAP;AAAsBE,IAAAA,UAAtB;AAAkCI,IAAAA;AAAlC,GAAP;AACH,CAFM;MAAMU,Y;AAGb,OAAO,MAAMC,SAAS,GAAG,CAACf,UAAD,EAAqBO,SAArB,KAAqD;AAC1E,SAAO;AAACT,IAAAA,IAAI,EAAE,UAAP;AAAmBE,IAAAA,UAAnB;AAA+BO,IAAAA;AAA/B,GAAP;AACH,CAFM;MAAMQ,S;AAGb,OAAO,MAAMC,kBAAkB,GAAG,CAAChB,UAAD,EAAqBI,MAArB,EAAqCI,MAArC,KAA4E;AAC1G,SAAO;AAACV,IAAAA,IAAI,EAAE,eAAP;AAAwBE,IAAAA,UAAxB;AAAoCI,IAAAA,MAApC;AAA4CI,IAAAA;AAA5C,GAAP;AACH,CAFM;MAAMQ,kB;AAGb,OAAO,MAAMC,iBAAiB,GAAG,CAACjB,UAAD,EAAqBI,MAArB,EAAqCG,SAArC,KAA8E;AAC3G,SAAO;AAACT,IAAAA,IAAI,EAAE,cAAP;AAAuBE,IAAAA,UAAvB;AAAmCI,IAAAA,MAAnC;AAA2CG,IAAAA;AAA3C,GAAP;AACH,CAFM;MAAMU,iB","sourcesContent":["import {TasksStateType} from \"../App\";\nimport {v1} from \"uuid\";\nimport {throws} from \"assert\";\nimport {Simulate} from \"react-dom/test-utils\";\nimport error = Simulate.error;\n\nexport type RemoveTaskAT = {\n    type: 'REMOVE-TASK'\n    todolistId: string\n    taskId: string\n}\nexport type AddTaskAT = {\n    type: \"ADD-TASK\"\n    todolistId: string\n    taskTitle: string\n}\nexport type ChangeTaskStatusAT = {\n    type: \"CHANGE-STATUS\"\n    todolistId: string\n    taskId: string\n    isDone: boolean\n}\nexport type ChangeTaskTitleAT = {\n    type: \"CHANGE-TITLE\"\n    todolistId: string\n    taskId: string\n    taskTitle: string\n}\ntype ActionType = RemoveTaskAT | AddTaskAT |\n    ChangeTaskStatusAT | ChangeTaskTitleAT\n\nexport const TasksReducers = (tasks: TasksStateType, action: ActionType): TasksStateType => {\n    switch (action.type) {\n        case \"REMOVE-TASK\":\n            let todolistTasks = tasks[action.todolistId];\n            tasks[action.todolistId] = todolistTasks.filter(t => t.id !== action.taskId);\n            return {...tasks}\n        case \"ADD-TASK\":\n            let todolistTasks1 = tasks[action.todolistId]\n            tasks[action.todolistId] = [{id: v1(), title: action.taskTitle, isDone: false}, ...todolistTasks1]\n            return {...tasks}\n        case \"CHANGE-STATUS\":\n            let task = tasks[action.todolistId].find(t => t.id === action.taskId)\n            if (task) task.isDone = action.isDone;\n            return {...tasks}\n        case \"CHANGE-TITLE\":\n            let todolistTasks3 = tasks[action.todolistId]\n            let task1 = todolistTasks3.find(t => t.id === action.taskId)\n            if (task1) task1.title = action.taskTitle\n            return {...tasks}\n        default:\n            throw new Error('incorrect task reducer action type')\n    }\n}\n\nexport const RemoveTaskAC = (todolistId: string, taskId: string):RemoveTaskAT => {\n    return {type: 'REMOVE-TASK', todolistId, taskId}\n}\nexport const AddTaskAC = (todolistId: string, taskTitle: string):AddTaskAT => {\n    return {type: \"ADD-TASK\", todolistId, taskTitle}\n}\nexport const ChangeTaskStatusAC = (todolistId: string, taskId: string, isDone: boolean):ChangeTaskStatusAT => {\n    return {type: \"CHANGE-STATUS\", todolistId, taskId, isDone}\n}\nexport const ChangeTaskTitleAC = (todolistId: string, taskId: string, taskTitle: string):ChangeTaskTitleAT  => {\n    return {type: \"CHANGE-TITLE\", todolistId, taskId, taskTitle}\n}"]},"metadata":{},"sourceType":"module"}